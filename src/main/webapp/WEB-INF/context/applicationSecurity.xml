<?xml version="1.0" encoding="UTF-8"?>

<beans:beans
    xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <global-method-security secured-annotations="enabled" pre-post-annotations="enabled" />

    <beans:bean
        id="loggerListener"
        class="org.springframework.security.authentication.event.LoggerListener" />

    <http auto-config="true">
        <form-login login-page="/login.xhtml" />
        <http-basic />
        <intercept-url pattern="/javax.faces.resource/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <intercept-url pattern="/login.xhtml" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <!--pro vypnuti securyty odkomentovat-->
        <!--<intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />-->
        <intercept-url pattern="/customer/**" access="ROLE_ADMIN" />
        <intercept-url pattern="/user/**" access="ROLE_ADMIN" />
        <intercept-url pattern="/**" access="ROLE_ADMIN" />
        <logout invalidate-session="true" delete-cookies="true" logout-success-url="/login.xhtml" />
    </http>

    <beans:bean id="flexibleAuthenticationProvider" class="cz.cvut.fel.wpa.tracker.service.AuthenticationService">
        <beans:property name="genericDAO" ref="genericDao" />
        <beans:property name="transactionTemplate" ref="transactionTemplate" />
    </beans:bean>
    <!--<beans:bean id="genericDao" class="cz.cvut.fel.wpa.tracker.dao.GenericHibernateJpaDao" />-->
    <!--<beans:bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate"/>-->

    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="flexibleAuthenticationProvider" />

              <!--<authentication-provider>-->
                    <!--<user-service>-->
                        <!--<user name="test" password="test" authorities="ROLE_ADMIN,ROLE_USER" />-->
                        <!--<user name="test2" password="test2" authorities="ROLE_USER" />-->
                    <!--</user-service>-->
                <!--</authentication-provider>-->

        <!--nekdy take lze pouzit jiz existujici, jednoduchy provider pro JDBC -->
        <!--        <security:authentication-provider>
            <security:jdbc-user-service data-source-ref="dataSource"
                users-by-username-query="SELECT username,password,true FROM person WHERE username=?"
                authorities-by-username-query="SELECT username,groupname FROM person WHERE username=?"
                role-prefix="ROLE_" />
            <security:password-encoder base64="false" hash="sha" />
        </security:authentication-provider>-->
    </authentication-manager>

</beans:beans>